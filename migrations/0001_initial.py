# Generated by Django 3.1.4 on 2021-02-11 19:44

import app1.validadores
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re
import stdimage.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aeronave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aeronaveModelo', models.CharField(max_length=40, verbose_name='Aeronave')),
                ('aeronaveIdentificacao', models.CharField(max_length=40, null=True, verbose_name='Aeronave ID')),
            ],
        ),
        migrations.CreateModel(
            name='Aula',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aulaAula', models.CharField(help_text='Coloque o nome da matéria.', max_length=40, verbose_name='Aula:')),
                ('aulaDescrição', models.TextField(verbose_name='Descrição da aula:')),
            ],
        ),
        migrations.CreateModel(
            name='Cidades',
            fields=[
                ('cidade', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=50, null=True, verbose_name='Estado')),
            ],
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('criado', models.DateField(auto_now_add=True, verbose_name='Data de Criação')),
                ('modificado', models.DateField(auto_now=True, verbose_name='Data de atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('perfilNick', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('slug', models.SlugField(editable=False, max_length=100, null=True, verbose_name='Slug')),
                ('imagem', stdimage.models.StdImageField(null=True, upload_to='perfil_headshots', verbose_name='Imagem')),
                ('perfilNome', models.CharField(max_length=50, verbose_name='Nome')),
                ('perfilIdade', models.IntegerField(null=True, verbose_name='Idade')),
                ('perfilTelefoneFixo', models.DecimalField(decimal_places=1, max_digits=12, null=True, verbose_name='Telefone')),
                ('perfilTelefoneCelular', models.DecimalField(decimal_places=1, max_digits=15, null=True, verbose_name='Celular')),
                ('perfilEmail', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('perfilCPF', models.CharField(max_length=11, null=True, validators=[django.core.validators.RegexValidator(re.compile('^-?\\d+\\Z'), code='invalid', message='Enter a valid integer.'), app1.validadores.validate_cpf], verbose_name='Número do CPF')),
                ('perfilValidadeDoCCF', models.DateField(null=True, verbose_name='Data de validade do CCF')),
                ('perfilLicenca', models.CharField(max_length=20, null=True, verbose_name='Licenças')),
                ('perfilHabilitacoes', models.CharField(max_length=40, null=True, verbose_name='Habilitações')),
                ('perfilMNTE', models.DateField(null=True, verbose_name='MNTE')),
                ('perfilCidade', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app1.cidades', verbose_name='Cidade.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AgendamentoInstancia',
            fields=[
                ('criado', models.DateField(auto_now_add=True, verbose_name='Data de Criação')),
                ('modificado', models.DateField(auto_now=True, verbose_name='Data de atualização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Id unico para o agendamento.', primary_key=True, serialize=False)),
                ('agendamentoValidadeCCF', models.CharField(max_length=40, verbose_name='Validade do CCF')),
                ('agendamentoData', models.DateField(verbose_name='Data e horário')),
                ('agendamentoHorasDisponiveis', models.IntegerField(blank=True, null=True, verbose_name='Horas de voô disponíveis')),
                ('agendamentoNumeroDeHoras', models.FloatField(verbose_name='Agendar horas')),
                ('agendamentoObservacoes', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Observações')),
                ('agendamentoStatus', models.CharField(blank=True, choices=[('e', 'Em curso.'), ('c', 'Cancelado!'), ('a', 'Atrasado.'), ('r', 'Reservado.'), ('f', 'Concluído.')], default='m', help_text='Estado do agendamento.', max_length=1)),
                ('agendamentoAeronave', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.aeronave', verbose_name='Selecione a aeronave.')),
                ('agendamentoAulas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.aula', verbose_name='Tipo de instrução.')),
                ('agendamentoBaseAerea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.cidades', verbose_name='Selecione a base aérea.')),
                ('agendamentoInstrutor1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrutor_1', to='app1.perfil', verbose_name='Instrutor 1')),
                ('agendamentoInstrutor2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instrutor_2', to='app1.perfil', verbose_name='Instrutor 2')),
                ('agendamentoPerfil', models.ForeignKey(help_text='Instrutor.', on_delete=django.db.models.deletion.CASCADE, related_name='Perfil', to='app1.perfil', verbose_name='Perfil.')),
            ],
            options={
                'ordering': ['-criado'],
            },
        ),
    ]
